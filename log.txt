功能相关：

接下来需要完成移动请求、广播等等，在完成移动相关之后，需要把地图场景管理完善一下。
然后需要检测一下目前写的这些架构是否合理，对错误的处理，还有内存性能等方面的调整。  --2017.1.6

json打包数据，敏感词检查，aoi_handler这边需要通过sharemap来同步每个视野内玩家的坐标 --2017.1.18
--json打包已加，sharemap已加，敏感词检查已加，同步坐标已加

热更新、cluster --2017.1.18

退出流程要做好，注意先后顺序，目标退出顺序是否并发 --2017.2.12

搭建map、player相关的框架，需要对现有的一些框架进行修改，理清条理，弄一个清晰、易于扩展的结构 --2017.4.7

warning:

idmgr那边写了三种实现的方法...不知道哪种更好？或者都一样？

aoi那边，看是player发送mapready之后再加入到aoi中还是以w模式先加到aoi，ready之后再设置为wm模式

aoi总感觉乱乱的...有时间理一下..

addaoiobj那边进入过两次..可能发了两次updateinfo()？有空看看
--updateinfo()确实会发多次，不过不知道是不是addaoiobj那边进入过两次
--因为在characterready这边会请求一次，已经注释掉了，没有必要
--client进入之后，马上moveto了也会导致updateinfo

留意一下，redispool那边貌似如果使用的地方的语法错误，这边就得不到返回，假死

有条件的时候需要测试视野相关的上下线，完善aoi相关机制

delaoiobj那边可能需要设置一下玩家为下线状态，然后characterwriter:commit()一下。
然后在updateagentlist中判断玩家的在线状态

aoi的cservice里面写的多线程触发message_update失败，使用的是lua那边call cservice。
这边可能需要看一下，能不能不走call，直接在cservice那边使用多线程update

aoi那边characterleave中，调用delaoiobj，使用call替换send后，
client断线重连会导致loginserver报already login，
这边需要处理一下，不然玩家在某些情况下，再也进不了服务器了。

退出流程和进入流程需要再检查一下流程，该call的使用call，该send改用send

是不是应该为每个函数加注释呢...有点小纠结...

看怎么才能触发cservice的release

由于伪并发...msgagent这边在疯狂的连接过程中会出现玩家已经被挤下线了，user什么的已经清空了，
但是requestqueue中有请求还在处理，那么这个时候使用user什么的就会出问题。
主要是因为cmd和request不在一个queue导致的。但是如果这两个在同一个queue又会导致锁死。
目前只会在极端情况下才会出现这个问题，主要是cmd和request的消息和并发的执行导致的一系列问题。
看能不能做到将cmd和request的消息合并到一个queue中去。如果合并了，就需要注意锁死问题了。
不能出现在request流程中去call自己的cmd命令
--设置agent的状态，在agent没有完全退出的时候，不加入agentpool
--貌似并不是agent没有完全退出导致的问题
--而是agent退出了，但是queue里面还有任务没有做完，导致的错误
--这边给agent添加状态，在某些状态下才执行消息
--这边基本没什么问题了，以后还得继续测试

在玩家请求退出游戏的时候，最后玩家是收不到退出返回的，得看看能不能让玩家收到退出返回

error：

还没有做服务器退出处理，这边找到一个退出方法，在debug control里面可以call服务，
为服务写个退出命令，去call主服务，然后调用其他的服务依次退出即可

需要注意，aoi这边，如果玩家特别多的时候的性能，还有同一个地图，在N群玩家进出之后的性能
主要是貌似每次update之后，如果马上message会有性能影响？得测试一下

dbmgr那边的服务可能需要加队列

找到原因的：
aoi这边，当添加的对象很多的时候，及时移除对象，内存并没有减少到期望值
--里面的hashmap增长了

move_handler那边看到角色的pos值为string，应该是数据库那边返回的是这个类型，这边需要查找并修复一下
--这个是redis这边取出来的结果为string，在每次获取结果的时候，都根据mysql中的数据类型进行一次转化

两个map共用了一个aoi...两个方案解决：
一个是在lua-aoi中，为每个map单独创建space；
一个是重写，把aoi写成CSERVICE
最好重写CSERVICE吧，这个总是要实现的..趁现在就搞清楚
因为公用还导致地图退出的时候，多次release aoi的core dump
--重写了cserver

service_aoi里面，callback那里返回的字符串的结尾有很多空格..虽然可以想办法过滤掉，但是最好弄清楚为什么会有。
还有那边的内存申请用的是skynet_malloc，如果给skynet_send传的sz重新计算一下大小，是可以避免这个空格的，但是不知道会不会导致内存泄漏。
--事先计算好实际需要申请的内存大小

msgagent那边有一个task，是sharedata
